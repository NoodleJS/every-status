{
  "dependencies": {
    "util": "~1.0.0"
  },
  "asyncDependencies": {},
  "devDependencies": {
    "assert": "~1.0.1"
  },
  "scripts": {},
  "engines": {},
  "name": "events",
  "version": "1.0.5",
  "description": "A port of 'events' for cortex from node.js, make your node code run in browsers.",
  "main": "index.js",
  "repository": {
    "type": "git",
    "events": "git@github.com:cortexjs/browser-events.git"
  },
  "keywords": [
    "checker",
    "validator",
    "validate",
    "setter"
  ],
  "license": "MIT",
  "readme": "# events [![Build Status](https://travis-ci.org/cortexjs/browser-events.png?branch=master)](https://travis-ci.org/cortexjs/browser-events)\n\nA port of 'events' for cortex from node.js, make your node code run in browsers.\n\n## Documentation\n\n[Node.js Events](http://nodejs.org/api/events.html)\n\n## Usage\n\n```js\nfunction MyConstructor () {}\nvar util = require('util');\nvar events = require('events');\nutil.inherits(MyConstructor, events);\n```\n\n### What's the main difference with neuron 1.0 events ?\n\n#### No arguments overloading for method `.on` \n\nneuron 1.0:\n```js\ninstance.on({\n  event1: function(){},\n  event2: function(){}\n});\n```\n\nevents:\n```js\ninstance\n  .on('event1', function(){})\n  .on('event2', function(){})\n```\n\n#### Method `.off` no longer exists\n\n`.off()` -> `removeAllListeners()`\n\n`.off(event)` -> `removeAllListeners(event)`\n\n`.off(event, listener)` -> `removeListener(event, listener)`\n\n```js\n// neuron 1.0\ninstance.off({\n  event1: listener1,\n  event2: listener2\n});\n\n// events\ninstance\n  .removeListener(event1, listener1)\n  .removeListener(event2, listener2)\n```\n",
  "readmeFilename": "README.md",
  "gitHead": "b0652c274cfa8f229fa22167537b3326d3c49f33",
  "_id": "events@1.0.5",
  "css": [],
  "entries": []
}